{#- it is generally better to set these through context #}
{%- set proxy = salt['pillar.get']('atlassian:confluence:proxy', False) %}
{%- set ssl = salt['pillar.get']('atlassian:confluence:ssl', False) %}
{%- set local_port = salt['pillar.get']('atlassian:confluence:local_port', '8090') -%}
<Server port="8000" shutdown="SHUTDOWN" debug="0">
    <Service name="Tomcat-Standalone">
        <Connector port="8090" connectionTimeout="20000" redirectPort="8443"
                maxThreads="200" minSpareThreads="10"
                enableLookups="false" acceptCount="10" debug="0" URIEncoding="UTF-8" />

        <Engine name="Standalone" defaultHost="localhost" debug="0">

            <Host name="localhost" debug="0" appBase="webapps" unpackWARs="true" autoDeploy="false">

                <Context path="" docBase="../confluence" debug="0" reloadable="false" useHttpOnly="true">
                    <!-- Logger is deprecated in Tomcat 5.5. Logging configuration for Confluence is specified in confluence/WEB-INF/classes/log4j.properties -->
                    <Manager pathname="" />
                </Context>
            </Host>

        </Engine>

        <!--
            To run Confluence via HTTPS:
             * Uncomment the Connector below
             * Execute:
                 %JAVA_HOME%\bin\keytool -genkey -alias tomcat -keyalg RSA (Windows)
                 $JAVA_HOME/bin/keytool -genkey -alias tomcat -keyalg RSA  (Unix)
               with a password value of "changeit" for both the certificate and the keystore itself.
             * Restart and visit https://localhost:8443/

             For more info, see https://confluence.atlassian.com/display/DOC/Running+Confluence+Over+SSL+or+HTTPS
        -->

        <Connector acceptCount="100"
                   connectionTimeout="20000"
                   clientAuth="false"
                   enableLookups="false"
                   disableUploadTimeout="true"
                   maxThreads="150"
                   minSpareThreads="25"
                   maxHttpHeaderSize="8192"
                   protocol="HTTP/1.1"
                   port="{{ local_port }}"
                   {%- if proxy %}
                   proxyName="{{ proxy.name }}"
                   proxyPort="{{ proxy.port }}"
                   {%- endif %}
                   {%- if ssl %}
                   secure="true"
                   scheme="https"
                   {%- endif %}
                   URIEncoding="UTF-8" />
    </Service>
</Server>
